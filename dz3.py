from math import factorial
from math import e
import numpy as np


def combinations(n, k):
    return int(factorial(n) / (factorial(k) * factorial(n - k)))


# 1 Даны значения зарплат из выборки выпускников: 100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65,
# 84, 90, 150. Посчитать (желательно без использования статистических методов наподобие std, var, mean) среднее
# арифметическое, среднее квадратичное отклонение, смещенную и несмещенную оценки дисперсий для данной выборки.
data = [100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150]
avg = sum(data) / len(data)
print(avg)
# ответ 65.3
s = np.std(data, ddof=1)
print(s)
# ответ 31.624607341019814
d1 = np.var(data)
print(d1)
# ответ 950.11
d2 = np.var(data, ddof=1)
print(d2)
# ответ 1000.1157894736842


# 2 В первом ящике находится 8 мячей, из которых 5 - белые. Во втором ящике - 12 мячей, из которых 5 белых. Из первого
# ящика вытаскивают случайным образом два мяча, из второго - 4. Какова вероятность того, что 3 мяча белые?
w0_w3 = (combinations(5, 0) * combinations(3, 2) / combinations(8, 2)) * (combinations(5, 3) * combinations(7, 1) / combinations(12, 4))
w1_w2 = (combinations(5, 1) * combinations(3, 1) / combinations(8, 2)) * (combinations(5, 2) * combinations(7, 2) / combinations(12, 4))
w2_w1 = (combinations(5, 2) * combinations(3, 0) / combinations(8, 2)) * (combinations(5, 1) * combinations(7, 3) / combinations(12, 4))
result2 = w0_w3 + w1_w2 + w2_w1
print(result2)
# ответ 0.3686868686868687


# 3 На соревновании по биатлону один из трех спортсменов стреляет и попадает в мишень. Вероятность попадания для
# первого спортсмена равна 0.9, для второго — 0.8, для третьего — 0.6. Найти вероятность того, что выстрел произведен:
# a). первым спортсменом б). вторым спортсменом в). третьим спортсменом.
sp1 = 0.9
sp2 = 0.8
sp3 = 0.6
p_all = 1/3 * sp1 + 1/3 * sp2 + 1/3 * sp3
result3_1 = 1/3 * sp1 / p_all
print(result3_1)
# ответ 0.391304347826087
result3_2 = 1/3 * sp2 / p_all
print(result3_2)
# ответ 0.3478260869565218
result3_3 = 1/3 * sp3 / p_all
print(result3_3)
# ответ 0.2608695652173913


# 4 В университет на факультеты A и B поступило равное количество студентов, а на факультет C студентов поступило
# столько же, сколько на A и B вместе. Вероятность того, что студент факультета A сдаст первую сессию, равна 0.8.
# Для студента факультета B эта вероятность равна 0.7, а для студента факультета C - 0.9. Студент сдал первую сессию.
# Какова вероятность, что он учится: a). на факультете A б). на факультете B в). на факультете C?
stud_a = 0.8
stud_b = 0.7
stud_c = 0.9
q_stud_a = 0.25
q_stud_b = 0.25
q_stud_c = 0.5
stud_all = stud_a * q_stud_a + stud_b * q_stud_b + stud_c * q_stud_c
result4_1 = stud_a * q_stud_a / stud_all
print(result4_1)
# ответ 0.24242424242424246
result4_2 = stud_b * q_stud_b / stud_all
print(result4_2)
# ответ 0.21212121212121213
result4_3 = stud_c * q_stud_c / stud_all
print(result4_3)
# ответ 0.5454545454545455


# 5 Устройство состоит из трех деталей. Для первой детали вероятность выйти из строя в первый месяц равна 0.1, для
# второй - 0.2, для третьей - 0.25. Какова вероятность того, что в первый месяц выйдут из строя: а). все детали
# б). только две детали в). хотя бы одна деталь г). от одной до двух деталей?
det1 = 0.1
det2 = 0.2
det3 = 0.25
result5_1 = det1 * det2 * det3
print(result5_1)
# ответ 0.005000000000000001
result5_2 = det1 * det2 * (1 - det3) + det1 * (1 - det2) * det3 + (1 - det1) * det2 * det3
print(result5_2)
# ответ 0.08000000000000002
result5_3 = 1 - (1 - det1) * (1 - det2) * (1 - det3)
print(result5_3)
# ответ 0.45999999999999996
result5_4 = result5_3 - result5_1
print(result5_4)
# ответ 0.45499999999999996
